import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.springframework.boot.gradle.tasks.bundling.BootJar

buildscript {
	ext {
		apacheCommonsVersion    = "2.16.1"
		jakartaInjectApiVersion = "2.0.1"
		JwtVersion				= "0.12.3"
	}
}

plugins {
	id "org.jetbrains.kotlin.jvm" version "1.9.24" apply false
	id "org.jetbrains.kotlin.plugin.spring" version "1.9.24" apply false
	id "org.springframework.boot" version "3.3.2" apply false
	id "io.spring.dependency-management" version "1.1.6" apply false
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.24' apply false
}

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	version = "0.0.1-SNAPSHOT"

	apply plugin: "idea"
	apply plugin: "kotlin"
	apply plugin: "org.jetbrains.kotlin.jvm"
	apply plugin: "org.jetbrains.kotlin.plugin.spring"
	apply plugin: "org.springframework.boot"
	apply plugin: "io.spring.dependency-management"
	apply plugin: "org.jetbrains.kotlin.plugin.jpa"

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	dependencies {
		implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
		implementation "org.jetbrains.kotlin:kotlin-reflect"
		implementation "commons-io:commons-io:$apacheCommonsVersion"
		implementation "jakarta.inject:jakarta.inject-api:$jakartaInjectApiVersion"
		implementation "io.jsonwebtoken:jjwt-api:$JwtVersion"
		implementation "io.jsonwebtoken:jjwt-impl:$JwtVersion"
		implementation "io.jsonwebtoken:jjwt-jackson:$JwtVersion"
		implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core"

		implementation "org.springframework.boot:spring-boot-starter-data-jpa"
		implementation "org.springframework.boot:spring-boot-starter-security"
		implementation "org.springframework.boot:spring-boot-starter-validation"
		runtimeOnly "org.postgresql:postgresql"

		testImplementation "org.springframework.boot:spring-boot-starter-test"
		testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
		testImplementation "io.mockk:mockk-jvm:1.13.12"
		testImplementation "org.springframework.security:spring-security-test"
		testImplementation 'org.assertj:assertj-core:3.26.3'
		testImplementation "com.ninja-squad:springmockk:4.0.2"
		implementation "io.github.serpro69:kotlin-faker:1.9.0"
		testRuntimeOnly "org.junit.platform:junit-platform-launcher"
	}

	java {
		toolchain {
			languageVersion.set(JavaLanguageVersion.of(JavaVersion.VERSION_17.toString()))
		}
	}

	kotlin {
		jvmToolchain {
			languageVersion.set(JavaLanguageVersion.of(JavaVersion.VERSION_17.toString()))
		}
	}


	tasks.withType(Test).configureEach {
		useJUnitPlatform()
	}

	tasks.withType(KotlinCompile).configureEach {
		compilerOptions {
			freeCompilerArgs.add("-Xjsr305=strict")
			jvmTarget.set(JvmTarget.JVM_17)
		}
	}

	tasks.withType(BootJar).tap {
		configureEach {
			mainClass.set("com.fiap.hackthon.healthmed.app.AppRunKt")  // Use mainClass em vez de mainClassName
		}
	}
}