name: CI/CD

on:
  push:
    branches: [ main ]

env:
  DOCKER_IMAGE: health-med-api:latest
  JAR_PATH: app/build/libs/app-0.0.1-SNAPSHOT.jar
  EKS_DIRECTORY: .infra/kubernetes/

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Restore cached artifact
        uses: actions/cache@v3
        with:
          path: ${{ env.JAR_PATH }}
          key: ${{ runner.os }}-java-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-java-
      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Run Coverage
        run: |
          chmod +x gradlew
          ./gradlew clean jacocoTestReport

      - name: jacoco-badge-generator-schedule
        id: jacocoModSchedule
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          generate-branches-badge: true
          jacoco-csv-file: schedule/build/reports/jacoco/test/jacocoTestReport.csv
          coverage-badge-filename: jacoco-schedule.svg
          branches-badge-filename: branches-schedule.svg
          coverage-label: Coverage Schedule
          workflow-summary-heading: Module Schedule[Use Cases] JaCoCo Test Coverage Summary

      - name: jacoco-badge-generator-doctor
        id: jacocoModDoctor
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          generate-branches-badge: true
          jacoco-csv-file: doctor/build/reports/jacoco/test/jacocoTestReport.csv
          coverage-badge-filename: jacoco-doctor.svg
          branches-badge-filename: branches-doctor.svg
          coverage-label: Coverage Doctor
          workflow-summary-heading: Module Doctor[Use Cases] JaCoCo Test Coverage Summary

      - name: jacoco-badge-generator-patient
        id: jacocoModPatient
        uses: cicirello/jacoco-badge-generator@v2.11.0
        with:
          generate-branches-badge: true
          jacoco-csv-file: patient/build/reports/jacoco/test/jacocoTestReport.csv
          coverage-badge-filename: jacoco-patient.svg
          branches-badge-filename: branches-patient.svg
          coverage-label: Coverage Patient
          workflow-summary-heading: Module Patient[Use Cases] JaCoCo Test Coverage Summary

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"      

      - name: Commit and push the badge (if it changed)
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions
          message: 'commit badge'
          add: '*.svg'

      - name: Upload JaCoCo coverage report - Schedule
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-schedule
          path: schedule/build/reports/jacoco/

      - name: Upload JaCoCo coverage report - Doctor
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-doctor
          path: doctor/build/reports/jacoco/

      - name: Upload JaCoCo coverage report - Patient
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report-patient
          path: patient/build/reports/jacoco/

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.7.1
        with:
          paths: |
            ${{ github.workspace }}/**/build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.xml,
            ${{ github.workspace }}/**/build/reports/jacoco/**/debugCoverage.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60


  build:    
    runs-on: ubuntu-latest
    needs: test
    permissions:
      packages: write
      contents: write
      attestations: write
    steps:
    - uses: actions/checkout@v4
    - name: Restore cached artifact
      uses: actions/cache@v3
      with:
        path: ${{ env.JAR_PATH }}
        key: ${{ runner.os }}-java-${{ hashFiles('**/build.gradle') }}
        restore-keys: |
          ${{ runner.os }}-java-
    - uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto' 
      
    - name: Cache the artifact
      uses: actions/cache@v3
      with:
        path: ${{ env.JAR_PATH }}
        key: ${{ runner.os }}-java-${{ hashFiles('**/build.gradle') }}
        restore-keys: |
          ${{ runner.os }}-java-        
          
    - name: Grant execute permissions
      run: chmod +x gradlew        
    - name: Build
      run: ./gradlew build

  docker:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: write
      attestations: write
    steps:
      - uses: actions/checkout@v4

      - name: Restore cached artifact
        uses: actions/cache@v3
        with:
          path: ${{ env.JAR_PATH }}
          key: ${{ runner.os }}-java-${{ hashFiles('**/build.gradle') }}
          restore-keys: |
            ${{ runner.os }}-java-

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}

  deploy:
    name: Deploy Kubernetes
    if: false
    runs-on: ubuntu-latest
    needs: docker
    permissions:
      packages: write
      contents: write
      attestations: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Configure AWS Credentials for GitHub Actions
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: AWS get-caller-identity
        run: |
          aws sts get-caller-identity

      - name: Set up Kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}

      - name: EKS apply secrets
        run: |
          ls -la 
          kubectl apply -f ${{ env.EKS_DIRECTORY }}secrets.yaml

      - name: EKS apply deployment
        run: |
          kubectl delete -f ${{ env.EKS_DIRECTORY }}deployment.yaml
          kubectl apply -f ${{ env.EKS_DIRECTORY }}deployment.yaml

      - name: EKS apply hpa
        run: |
          kubectl apply -f ${{ env.EKS_DIRECTORY }}hpa.yaml

      - name: EKS apply service
        run: |
          kubectl apply -f ${{ env.EKS_DIRECTORY }}service.yaml
